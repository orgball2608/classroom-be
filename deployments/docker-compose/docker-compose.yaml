version: '3.7'

services:
  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: webnc
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - elearning

  redis:
    image: redis/redis-stack:latest
    pull_policy: if_not_present
    restart: on-failure
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    networks:
      - elearning

  nestjs:
    build:
      context: ../../
      dockerfile: Dockerfile
      target: development
    command: yarn run start:dev
    env_file:
      - ../../.env.docker
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
      - postgres
    networks:
      - elearning
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/api/v1/health']
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - elearning

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 7889:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - elearning

  nodeexporter:
    image: prom/node-exporter:v1.6.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    labels:
      org.label-schema.group: 'monitoring'
    networks:
      - elearning

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    labels:
      org.label-schema.group: 'monitoring'
    networks:
      - elearning

volumes:
  postgres:
  redis:
  grafana:
  prometheus_data:

networks:
  elearning:
    driver: bridge
